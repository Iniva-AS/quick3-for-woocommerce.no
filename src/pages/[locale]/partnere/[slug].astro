---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import { useTranslations, type Locale } from '../../../i18n/utils';

export async function getStaticPaths() {
	const partners = await getCollection('partners');

	// Generate paths for both Norwegian and English
	const paths = [];
	for (const partner of partners.filter((p) => !p.data.draft)) {
		paths.push(
			{ params: { locale: 'no', slug: partner.slug }, props: { partner } },
			{ params: { locale: 'en', slug: partner.slug }, props: { partner } }
		);
	}

	return paths;
}

interface Props {
	partner: CollectionEntry<'partners'>;
}

const { partner } = Astro.props;
const { locale } = Astro.params as { locale: Locale };
const t = useTranslations(locale);
const { Content } = await partner.render();

const partnersPath = 'partnere';
---

<BaseLayout
	locale={locale}
	title={`${partner.data.title} - ${t.partners.meta.title}`}
	description={partner.data.description}
>
	<Header locale={locale} currentPath={Astro.url.pathname} />

	<article class="bg-white px-6 py-32 lg:px-8">
		<div class="mx-auto max-w-7xl">
			<!-- Breadcrumb -->
			<nav class="mb-8 flex" aria-label="Breadcrumb">
				<ol class="inline-flex items-center space-x-1 md:space-x-2">
					<li class="inline-flex items-center">
						<a href={`/${locale}`} class="text-sm font-medium text-gray-600 hover:text-gray-900">
							{t.nav.home}
						</a>
					</li>
					<li>
						<div class="flex items-center">
							<svg class="size-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
							</svg>
							<a href={`/${locale}/${partnersPath}`} class="ml-1 text-sm font-medium text-gray-600 hover:text-gray-900 md:ml-2">
								{t.nav.partners}
							</a>
						</div>
					</li>
					<li aria-current="page">
						<div class="flex items-center">
							<svg class="size-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
								<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
							</svg>
							<span class="ml-1 text-sm font-medium text-gray-500 md:ml-2">
								{partner.data.title}
							</span>
						</div>
					</li>
				</ol>
			</nav>

			<div class="grid grid-cols-1 gap-x-8 gap-y-8 lg:grid-cols-3">
				<!-- Main Content -->
				<div class="lg:col-span-2">
					<!-- Partner Logo & Name -->
					<div class="mb-8 flex items-center gap-x-6">
						<img
							src={partner.data.logo}
							alt={partner.data.title}
							class="h-24 w-24 rounded-lg object-contain bg-gray-50 p-2"
						/>
						<div>
							<h1 class="text-4xl font-semibold tracking-tight text-gray-900 sm:text-5xl">
								{partner.data.title}
							</h1>
							<p class="mt-2 text-lg text-gray-600">
								<svg class="mr-1 inline-block h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
									<path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1 1 15 0Z" />
								</svg>
								{partner.data.location}
							</p>
						</div>
					</div>

					<!-- Services Tags -->
					<div class="mb-8">
						<h2 class="text-sm font-semibold uppercase tracking-wide text-gray-500 mb-3">
							{t.partners.services}
						</h2>
						<div class="flex flex-wrap gap-2">
							{partner.data.services.map((service) => (
								<span class="inline-flex items-center rounded-md bg-indigo-50 px-3 py-1.5 text-sm font-medium text-indigo-700 ring-1 ring-inset ring-indigo-700/10">
									{service}
								</span>
							))}
						</div>
					</div>

					<!-- Partner Description (Markdown Content) -->
					<div class="prose prose-gray prose-lg max-w-none">
						<Content />
					</div>
				</div>

				<!-- Sidebar - Contact Information -->
				<div class="lg:col-span-1">
					<div class="sticky top-8 rounded-2xl border border-gray-200 bg-gray-50 p-6">
						<h2 class="text-lg font-semibold text-gray-900 mb-4">
							{t.partners.contactPartner}
						</h2>

						{partner.data.profileImage && (
							<div class="mb-6">
								<img
									src={partner.data.profileImage}
									alt={`${partner.data.title} contact person`}
									class="w-full rounded-lg object-cover aspect-square"
								/>
							</div>
						)}

						<div class="space-y-4">
							<!-- Website -->
							<a
								id="partner-website-link"
								href={partner.data.website}
								target="_blank"
								rel="noopener noreferrer"
								class="flex w-full items-center justify-center gap-x-2 rounded-md bg-indigo-600 px-4 py-3 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
							>
								<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M12 21a9.004 9.004 0 0 0 8.716-6.747M12 21a9.004 9.004 0 0 1-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 0 1 7.843 4.582M12 3a8.997 8.997 0 0 0-7.843 4.582m15.686 0A11.953 11.953 0 0 1 12 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0 1 21 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0 1 12 16.5a17.92 17.92 0 0 1-8.716-2.247m0 0A9.015 9.015 0 0 1 3 12c0-1.605.42-3.113 1.157-4.418" />
								</svg>
								{t.partners.website}
							</a>

							<!-- Email -->
							<a
								id="partner-email-link"
								href={`mailto:${partner.data.email}`}
								class="flex w-full items-center justify-center gap-x-2 rounded-md bg-white px-4 py-3 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
							>
								<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0 1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07 1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75" />
								</svg>
								{t.partners.email}
							</a>

							<!-- Phone -->
							<a
								id="partner-phone-link"
								href={`tel:${partner.data.phone}`}
								class="flex w-full items-center justify-center gap-x-2 rounded-md bg-white px-4 py-3 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"
							>
								<svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z" />
								</svg>
								{t.partners.phone}
							</a>
						</div>

						<!-- Contact Details (Display Only) -->
						<div class="mt-6 space-y-3 border-t border-gray-200 pt-6">
							<div class="text-sm">
								<p class="font-medium text-gray-900">{t.partners.email}:</p>
								<p class="text-gray-600 break-all">{partner.data.email}</p>
							</div>
							<div class="text-sm">
								<p class="font-medium text-gray-900">{t.partners.phone}:</p>
								<p class="text-gray-600">{partner.data.phone}</p>
							</div>
							<div class="text-sm">
								<p class="font-medium text-gray-900">{t.partners.location}:</p>
								<p class="text-gray-600">{partner.data.location}</p>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- Back to Partners Link -->
			<div class="mt-12 border-t border-gray-200 pt-8">
				<a
					href={`/${locale}/${partnersPath}`}
					class="inline-flex items-center text-sm font-semibold text-indigo-600 hover:text-indigo-500"
				>
					<svg class="mr-2 h-4 w-4" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
						<path stroke-linecap="round" stroke-linejoin="round" d="M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18" />
					</svg>
					{t.partners.backToPartners}
				</a>
			</div>
		</div>
	</article>

	<!-- LocalBusiness Structured Data -->
	<script type="application/ld+json" set:html={JSON.stringify({
		"@context": "https://schema.org",
		"@type": "LocalBusiness",
		"name": partner.data.title,
		"description": partner.data.description,
		"url": partner.data.website,
		"email": partner.data.email,
		"telephone": partner.data.phone,
		"image": partner.data.logo,
		"address": {
			"@type": "PostalAddress",
			"addressLocality": partner.data.location
		}
	})} />

	<!-- Partner Action Tracking -->
	<script define:vars={{ partnerName: partner.data.title, partnerSlug: partner.slug, partnerLocation: partner.data.location, partnerUrl: partner.data.website }}>
		document.addEventListener('DOMContentLoaded', function() {
			// Helper function to track partner actions
			function trackPartnerAction(actionType, actionLabel) {
				const eventData = {
					event: 'partner_action',
					action_type: actionType,
					partner_name: partnerName,
					partner_slug: partnerSlug,
					partner_location: partnerLocation,
					event_category: 'Partner Engagement',
					event_action: actionLabel,
					event_label: `${partnerName} - ${actionLabel}`
				};

				// Add partner URL for website clicks
				if (actionType === 'website_click') {
					eventData.partner_url = partnerUrl;
				}

				// Push to dataLayer
				window.dataLayer = window.dataLayer || [];
				window.dataLayer.push(eventData);

				// Console log for debugging
				console.log(`🤝 Partner Action Tracked:`, eventData);
			}

			// Track website clicks
			const websiteLink = document.getElementById('partner-website-link');
			if (websiteLink) {
				websiteLink.addEventListener('click', function() {
					trackPartnerAction('website_click', 'Website Click');
				});
			}

			// Track email clicks
			const emailLink = document.getElementById('partner-email-link');
			if (emailLink) {
				emailLink.addEventListener('click', function() {
					trackPartnerAction('email_click', 'Email Click');
				});
			}

			// Track phone clicks
			const phoneLink = document.getElementById('partner-phone-link');
			if (phoneLink) {
				phoneLink.addEventListener('click', function() {
					trackPartnerAction('phone_click', 'Phone Click');
				});
			}
		});
	</script>

	<Footer locale={locale} />
</BaseLayout>

<style is:global>
	/* Tailwind Prose customization for partner content */
	.prose {
		color: rgb(55 65 81);
	}

	.prose h2 {
		font-size: 1.875rem;
		line-height: 2.25rem;
		font-weight: 600;
		margin-top: 3rem;
		margin-bottom: 1.5rem;
		color: rgb(17 24 39);
	}

	.prose h3 {
		font-size: 1.5rem;
		line-height: 2rem;
		font-weight: 600;
		margin-top: 2rem;
		margin-bottom: 1rem;
		color: rgb(17 24 39);
	}

	.prose p {
		margin-top: 1.25rem;
		margin-bottom: 1.25rem;
	}

	.prose ul, .prose ol {
		margin-top: 1.25rem;
		margin-bottom: 1.25rem;
		padding-left: 1.625rem;
	}

	.prose ul {
		list-style-type: disc;
	}

	.prose ol {
		list-style-type: decimal;
	}

	.prose li {
		margin-top: 0.5rem;
		margin-bottom: 0.5rem;
	}

	.prose strong {
		font-weight: 600;
		color: rgb(17 24 39);
	}

	.prose a {
		color: rgb(79 70 229);
		text-decoration: none;
		font-weight: 500;
	}

	.prose a:hover {
		color: rgb(67 56 202);
	}
</style>
