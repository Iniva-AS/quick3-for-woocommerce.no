---
import { useTranslations, type Locale } from '../i18n/utils';

interface Props {
	locale: Locale;
}

const { locale } = Astro.props;
const t = useTranslations(locale);
const faqs = t.faq.items;
---

<div class="bg-white">
	<div class="mx-auto max-w-7xl px-6 py-24 sm:py-32 lg:px-8 lg:py-40">
		<div class="mx-auto max-w-4xl">
			<h2 class="text-4xl font-semibold tracking-tight text-gray-900 sm:text-5xl">
				{t.faq.title}
			</h2>
			<dl class="mt-16 divide-y divide-gray-900/10">
				{faqs.map((faq, index) => (
					<div class="faq-item py-6 first:pt-0 last:pb-0">
						<dt>
							<button
								type="button"
								class="faq-button group flex w-full items-start justify-between text-left text-gray-900"
								aria-expanded="false"
								data-faq-index={index}
							>
								<span class="text-base/7 font-semibold">{faq.question}</span>
								<span class="ml-6 flex h-7 items-center">
									<svg class="plus-icon size-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v12m6-6H6" />
									</svg>
									<svg class="minus-icon size-6 hidden" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
										<path stroke-linecap="round" stroke-linejoin="round" d="M18 12H6" />
									</svg>
								</span>
							</button>
						</dt>
						<dd class="faq-answer mt-2 pr-12 hidden">
							<p class="text-base/7 text-gray-600" set:html={faq.answer}></p>
						</dd>
					</div>
				))}
			</dl>
		</div>
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const faqButtons = document.querySelectorAll('.faq-button');

		faqButtons.forEach((button) => {
			button.addEventListener('click', () => {
				const faqItem = button.closest('.faq-item');
				const answer = faqItem?.querySelector('.faq-answer');
				const plusIcon = button.querySelector('.plus-icon');
				const minusIcon = button.querySelector('.minus-icon');
				const isExpanded = button.getAttribute('aria-expanded') === 'true';

				// Toggle this FAQ
				if (isExpanded) {
					button.setAttribute('aria-expanded', 'false');
					answer?.classList.add('hidden');
					plusIcon?.classList.remove('hidden');
					minusIcon?.classList.add('hidden');
				} else {
					button.setAttribute('aria-expanded', 'true');
					answer?.classList.remove('hidden');
					plusIcon?.classList.add('hidden');
					minusIcon?.classList.remove('hidden');
				}
			});
		});
	});
</script>
