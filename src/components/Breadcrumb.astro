---
import StructuredData from './StructuredData.astro';

interface BreadcrumbItem {
	label: string;
	href?: string;
}

interface Props {
	items: BreadcrumbItem[];
}

const { items } = Astro.props;
const siteUrl = 'https://quick3-for-woocommerce.no';

// Generate structured data
const breadcrumbSchema = {
	"@context": "https://schema.org",
	"@type": "BreadcrumbList",
	"itemListElement": items.map((item, index) => ({
		"@type": "ListItem",
		"position": index + 1,
		"name": item.label,
		...(item.href ? { "item": `${siteUrl}${item.href}` } : {})
	}))
};
---

<nav aria-label="Breadcrumb" class="mb-8">
	<ol class="flex items-center space-x-2 text-sm text-gray-600">
		{items.map((item, index) => (
			<li class="flex items-center">
				{index > 0 && (
					<svg class="mx-2 h-4 w-4 text-gray-400" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
						<path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
					</svg>
				)}
				{item.href ? (
					<a href={item.href} class="hover:text-gray-900 transition-colors">
						{item.label}
					</a>
				) : (
					<span class="text-gray-900 font-medium" aria-current="page">
						{item.label}
					</span>
				)}
			</li>
		))}
	</ol>
</nav>

<StructuredData type="breadcrumb" data={breadcrumbSchema} />
